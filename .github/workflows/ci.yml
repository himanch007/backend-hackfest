name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # health-check:

  #   runs-on: ubuntu-latest

  #   services:
  #     postgres:
  #       image: postgres
  #       env:
  #         POSTGRES_USER:
  #         POSTGRES_PASSWORD:
  #         POSTGRES_DB:
  #       ports: 
  #         - 5432:5432
  #       options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Cache dependency
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #         restore-keys: |
  #            ${{ runner.os }}-pip-

  #     - name: Setup python environment
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'

  #     - name: Check Python version
  #       run: python --version

  #     - name: Install requirements
  #       run: pip install -r requirements.txt

  #     - name: Check Syntax
  #       run: pycodestyle --statistics .

  #     - name: Run Migrations 
  #       run: python manage.py migrate

  #     - name: Run Test 
  #       run: python manage.py test



  build:

    runs-on: ubuntu-latest
    # needs: [health-check]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

    - name: Build & Publish Image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: docker18d/django-ci-cd
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: configure aws credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with: 
    #     aws-access-key-id: ${{ secrets.aws_access_key_id }}
    #     aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
    #     aws-region: ${{ env.AWS_REGION_NAME }}

  # deploy:
  #   needs: [build]
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout source code
  #     uses: actions/checkout@v2

  #   - name: Generate deployment package
  #     run: zip -r deploy.zip . -x '*.git*'

  #   - name: Deploy to EB
  #     uses: einaregilsson/beanstalk-deploy@v20
  #     with:
      
  #       aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
  #       application_name: django-github-actions-aws
  #       environment_name: django-github-actions-aws
        
  #       version_label: 12348
  #       region: "us-east-2"
  #       deployment_package: deploy.zip
